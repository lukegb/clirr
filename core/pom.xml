<!--
  - Maven 2.x pom file for the CLIRR Core module.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <parent>
    <groupId>net.sf.clirr</groupId>
    <artifactId>clirr</artifactId>
    <version>0.7-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>

  <modelVersion>4.0.0</modelVersion>
  <groupId>net.sf.clirr</groupId>
  <artifactId>clirr-core</artifactId>
  <packaging>jar</packaging>
  <name>Clirr Core</name>
  <version>0.7-SNAPSHOT</version>
  <description>
    Clirr is a tool that checks Java libraries for binary and source
    compatibility with older releases. Basically you give it two sets
    of jar files and Clirr dumps out a list of changes in the public
    API. Clirr provides an Ant task that can be configured to break
    the build if it detects incompatible API changes. In a continuous
    integration process Clirr can automatically prevent accidental
    introduction of compatibility problems in Java libraries.
  </description>
  <url>http://clirr.sourceforge.net/core</url>

  <scm>
    <connection>scm:cvs:pserver:anonymous@clirr.cvs.sourceforge.net:/cvsroot/clirr:clirr/core</connection>
    <url>http://clirr.cvs.sourceforge.net/clirr/core</url>
  </scm>

  <dependencies>
    <dependency>
      <groupId>asm</groupId>
      <artifactId>asm-all</artifactId>
      <version>2.2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.ant</groupId>
      <artifactId>ant</artifactId>
      <version>1.10.9</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
       <groupId>commons-cli</groupId>
       <artifactId>commons-cli</artifactId>
       <version>1.1</version>
    </dependency>
    <dependency>
       <groupId>junit</groupId>
       <artifactId>junit</artifactId>
       <version>3.8.1</version>
       <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <sourceDirectory>src/java</sourceDirectory>
    <testSourceDirectory>src/test</testSourceDirectory>
    
    <resources>
      <resource>
        <directory>src/conf</directory>
      </resource>
    </resources>

    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>2.0.2</version>
        <configuration>
          <encoding>${project.build.sourceEncoding}</encoding>
        </configuration>
      </plugin>

      <plugin>
        <!--
          - In order to run the unit tests, we have to build a couple of jars to
          - use as input to the tests. Unfortunately Maven isn't really structured
          - to do that without making these secondary jars into separate projects
          - which isn't desirable here. So just drop back to Ant for this part.. 
          -->
        <artifactId>maven-antrun-plugin</artifactId>
        <version>1.1</version>
        <executions>
          <execution>
            <id>compile-testlibs</id>
            <phase>test-compile</phase>
            <configuration>
              <tasks>
                <property name="JAVA_HOME" value="${java.home}"/>
                <property name="srcbase" value="src/testinput"/>
                <property name="dstbase" value="target/testinput"/>
                <mkdir dir="${dstbase}/testlib-v1"/>
                <javac srcdir="${srcbase}/testlib-v1" destdir="${dstbase}/testlib-v1" encoding="${project.build.sourceEncoding}"/>
                <jar destfile="target/testlib-v1.jar" basedir="${dstbase}/testlib-v1"/>
                <mkdir dir="${dstbase}/testlib-v2"/>
                <javac srcdir="${srcbase}/testlib-v2" destdir="${dstbase}/testlib-v2" encoding="${project.build.sourceEncoding}"/>
                <jar destfile="target/testlib-v2.jar" basedir="${dstbase}/testlib-v2"/>
              </tasks>
            </configuration>
            <goals>
              <goal>run</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>sun.jdk</groupId>
            <artifactId>tools</artifactId>
            <version>1.5</version>
            <scope>system</scope>
            <systemPath>${java.home}/../lib/tools.jar</systemPath>
          </dependency>
        </dependencies>
      </plugin>

      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.4</version>
        <configuration>
          <systemProperties>
            <property>
              <name>testinput</name>
              <value>${basedir}/target</value>
            </property>
          </systemProperties>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-jar-plugin</artifactId>
        <version>2.2</version>
        <configuration>
          <archive>
            <manifest>
              <mainClass>net.sf.clirr.cli.Clirr</mainClass>
            </manifest>
          </archive>
        </configuration>
      </plugin>

      <plugin>
        <artifactId>maven-source-plugin</artifactId>
        <version>2.0.4</version>
         <executions>
          <execution>
            <id>attach-sources</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <!--
          - Build an additional artifact which is a jar that contains
          - all the clirr classes plus all classes from all runtime
          - dependencies. This jar can then be run by users without
          - having to download anything else. 
          -->
        <artifactId>maven-shade-plugin</artifactId>
        <version>1.1</version>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <shadedArtifactAttached>true</shadedArtifactAttached>
              <shadedClassifierName>all</shadedClassifierName>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
      	<artifactId>maven-changes-plugin</artifactId>
      	<version>2.0</version>
      	<reportSets>
          <reportSet>
            <reports>
              <report>changes-report</report>
            </reports>
          </reportSet>
        </reportSets>
      	<configuration>
      	</configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.3</version>
        <configuration>
          <encoding>${project.build.sourceEncoding}</encoding>
          <show>protected</show>
          <excludePackageNames>net.sf.clirr.core.internal</excludePackageNames>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>jxr-maven-plugin</artifactId>
        <version>2.0-beta-1</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-report-plugin</artifactId>
        <version>2.4.2</version>
      </plugin>
<!--
maven-jdepend-plugin
maven-license-plugin
maven-tasklist-plugin (??)
-->
    </plugins>
  </reporting>
</project>
